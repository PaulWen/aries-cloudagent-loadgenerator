version: "3.7"
services:

  issuer-verifier-mediator-wallet-db:
    container_name: issuer-verifier-mediator-wallet-db
    image: ${POSTGRES_IMAGE}
    volumes:
      - issuer-verifier-mediator-wallet-db-volume:/var/lib/postgresql/data
    #      - "$PWD/postgresql.conf:/etc/postgresql/postgresql.conf"
    command: [ "postgres","-p", "5000",
               "-c", "idle_in_transaction_session_timeout=${IDLE_IN_TRASATION_SESSION_TIMEOUT_IN_MS_WALLET_DB_SINGLE_INSTANCE}",
               "-c", "lock_timeout=${LOCK_TIMEOUT_IN_MS_WALLET_DB_SINGLE_INSTANCE}",
               "-c", "log_checkpoints=${POSTGRES_LOGGING_TOGGLE}",
               "-c", "log_connections=${POSTGRES_LOGGING_TOGGLE}",
               "-c", "log_disconnections=${POSTGRES_LOGGING_TOGGLE}",
               "-c", "log_duration=${POSTGRES_LOGGING_TOGGLE}",
               "-c", "log_lock_waits=${POSTGRES_LOGGING_TOGGLE}",
               "-c", "log_min_error_statement=ERROR",
               "-c", "log_statement_sample_rate=${POSTGRES_LOGGING_SAMPLE_RATE}",
               "-c", "log_transaction_sample_rate=${POSTGRES_LOGGING_SAMPLE_RATE}",
               "-c", "log_statement_sample_rate=${POSTGRES_LOGGING_SAMPLE_RATE}",
               "-c", "log_transaction_sample_rate=${POSTGRES_LOGGING_SAMPLE_RATE}",
               "-c", "max_connections=${MAX_CONNECTIONS_WALLET_DB_SINGLE_INSTANCE}",
               "-c", "statement_timeout=${STATEMENT_TIMEOUT_IN_MS_WALLET_DB_SINGLE_INSTANCE}" ]
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - aries-load-test
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "50m"
    restart: always

  issuer-verifier-mediator:
    image: ${ACAPY_IMAGE}
    entrypoint: /bin/bash
    command: [
      "-c",
      "sleep 10;
          aca-py start \
          --no-ledger \
          --auto-provision \
          --admin 0.0.0.0 10000 \
          --inbound-transport http 0.0.0.0 10001 \
          --outbound-transport http \
          --endpoint http://issuer-verifier-mediator-nginx:10001 \
          --admin-insecure-mode \
          --label mediator \
          --wallet-type ${WALLET_TYPE} \
          --wallet-name mediator_wallet \
          --wallet-key key \
          --wallet-storage-type postgres_storage \
          --wallet-storage-config '{\"url\":\"issuer-verifier-mediator-wallet-db:5000\",\"max_connections\":${MAX_WALLET_CONNECTIONS_PER_ACAPY}}' \
          --wallet-storage-creds '{\"account\":\"${POSTGRES_USER}\",\"password\":\"${POSTGRES_PASSWORD}\",\"admin_account\":\"${POSTGRES_USER}\",\"admin_password\":\"${POSTGRES_PASSWORD}\"}' \
          --log-level ${ACAPY_LOG_LEVEL} \
          --open-mediation \
          ${ACAPY_DEBUG_OPTIONS}"
    ]
    networks:
      - aries-load-test
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - issuer-verifier-mediator-wallet-db
    logging:
      driver: loki
      options:
        loki-url: http://172.17.0.1:3100/loki/api/v1/push
        loki-max-backoff: "10s"
        loki-retries: "5"
        max-file: "5"
        max-size: "50m"
    restart: always

  issuer-verifier-mediator-nginx:
    container_name: issuer-verifier-mediator-nginx
    image: nginx:latest
    volumes:
      - ./issuer-verifier-mediator-nginx-configs/nginx-issuer-verifier-mediator-${NUMBER_OF_ISSUER_VERIFIER_MEDIATOR_ACAPY_INSTANCES}.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - issuer-verifier-mediator
    ports:
      - "10002:10000"
    networks:
      - aries-load-test

  issuer-verifier-acapy:
    image: ${ACAPY_IMAGE_IVH}
    entrypoint: /bin/bash
    command: [
        "-c",
        "sleep 10;
        aca-py start \
        --auto-provision \
        --admin 0.0.0.0 10000 \
        --inbound-transport http 0.0.0.0 10001 \
        --outbound-transport http \
        --endpoint http://issuer-verifier-nginx:10001 \
        --genesis-url ${LEDGER_GENESIS} \
        --ledger-pool-name ${LEDGER_POOL_NAME} \
        --invite-base-url didcomm://aries_connection_invitation \
        ${MULTITENANCY_SETTINGS} \
        --admin-insecure-mode \
        --label issuer_verifier_acapy \
        --wallet-type ${WALLET_TYPE} \
        --wallet-name ${POSTGRES_DB} \
        --wallet-key key \
        --wallet-storage-type postgres_storage \
        --wallet-storage-config '{\"url\":\"host.docker.internal:5432\",\"max_connections\":${MAX_WALLET_CONNECTIONS_PER_ACAPY}}' \
        --wallet-storage-creds '{\"account\":\"${POSTGRES_USER}\",\"password\":\"${POSTGRES_PASSWORD}\",\"admin_account\":\"${POSTGRES_USER}\",\"admin_password\":\"${POSTGRES_PASSWORD}\"}' \
        --auto-ping-connection \
        --auto-verify-presentation \
        --invite-public \
        --public-invites \
        --invite-multi-use \
        --tails-server-base-url ${ACAPY_TAILS_SERVER_BASE_URL} \
        --seed ${ISSUER_DID_SEED} \
        --log-level ${ACAPY_LOG_LEVEL} \
        --webhook-url ${LOAD_GENERATOR_WEBHOOK_ENDPOINT} \
        ${ACAPY_DEBUG_OPTIONS}"
    ]
    networks:
      - aries-load-test
    depends_on:
      - issuer-verifier-mediator-nginx
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: loki
      options:
        loki-url: http://172.17.0.1:3100/loki/api/v1/push
        loki-max-backoff: "10s"
        loki-retries: "5"
        max-file: "5"
        max-size: "50m"
    restart: always

  issuer-verifier-nginx:
    container_name: issuer-verifier-nginx
    image: nginx:latest
    volumes:
      - ./issuer-verifier-nginx-configs/nginx-issuer-verifier-${NUMBER_OF_ISSUER_VERIFIER_ACAPY_INSTANCES}.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - issuer-verifier-acapy
    ports:
      - "10000:10000"
    networks:
      - aries-load-test

  holder-acapy:
    image: ${ACAPY_IMAGE_IVH}
    entrypoint: /bin/bash
    command: [
        "-c",
        "sleep 10;
        export IP=`ifconfig eth0 | grep 'inet ' | awk '{print $$2}'`;
        echo $$IP;
        aca-py start \
        --auto-provision \
        --inbound-transport http 0.0.0.0 10011 \
        --outbound-transport http \
        --admin 0.0.0.0 10010 \
        --endpoint http://$$IP:10011 \
        --genesis-url ${LEDGER_GENESIS} \
        --ledger-pool-name $LEDGER_POOL_NAME \
        --ledger-pool-name ${LEDGER_POOL_NAME} \
        --admin-insecure-mode \
        --label holder_acapy \
        --wallet-type ${WALLET_TYPE} \
        --wallet-name holder_wallet \
        --wallet-key key \
        --wallet-storage-type postgres_storage \
        --wallet-storage-config '{\"url\":\"host.docker.internal:5432\",\"max_connections\":${MAX_WALLET_CONNECTIONS_PER_ACAPY}}' \
        --wallet-storage-creds '{\"account\":\"${POSTGRES_USER}\",\"password\":\"${POSTGRES_PASSWORD}\",\"admin_account\":\"${POSTGRES_USER}\",\"admin_password\":\"${POSTGRES_PASSWORD}\"}' \
        --auto-accept-invites \
        --invite-public \
        --public-invites \
        --auto-accept-requests \
        --auto-ping-connection \
        --auto-respond-credential-offer \
        --auto-respond-credential-proposal \
        --auto-respond-credential-request \
        --auto-respond-messages \
        --auto-store-credential \
        --auto-respond-presentation-request \
        --auto-respond-presentation-proposal \
        --auto-verify-presentation \
        --log-level ${ACAPY_LOG_LEVEL} \
        ${ACAPY_DEBUG_OPTIONS}"
    ]
    depends_on:
      - tails-server
    networks:
      - aries-load-test
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: loki
      options:
        loki-url: http://172.17.0.1:3100/loki/api/v1/push
        loki-max-backoff: "10s"
        loki-retries: "5"
        max-file: "5"
        max-size: "50m"
    restart: always

  holder-nginx:
    container_name: holder-nginx
    image: nginx:latest
    volumes:
      - ./holder-nginx-configs/nginx-holder-${NUMBER_OF_HOLDER_ACAPY_INSTANCES}.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - holder-acapy
    ports:
      - 10010:10010
    networks:
      - aries-load-test

  tails-server:
    container_name: tails-server
    build:
      context: ./indy-tails-server
      dockerfile: docker/Dockerfile.tails-server
    command: >
      tails-server
        --host 0.0.0.0
        --port 6543
        --storage-path /tmp/tails-files
        --log-level INFO

    volumes:
      - tails-server-volume:/home/indy/tails-files
    ports:
      - "6543:6543"
    networks:
      - aries-load-test
    restart: always

networks:
  aries-load-test:
    external: true
    name: aries-load-test

volumes:
  tails-server-volume:
  issuer-verifier-mediator-wallet-db-volume:
